name: Stable Server check and build


on:
  schedule:
    - cron: '45 15 */1 * *' # 15:45 , every day
  workflow_dispatch:


jobs:
  check_status:
    runs-on: [linux,x64]
    outputs:
      release-tag: ${{ steps.check_status.outputs.release-tag }}
    steps:
      - name: Check Status of GTNH Workflow
        id: check_status
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/GTNewHorizons/GT-New-Horizons-Modpack/actions/workflows/release-tags.yml/runs?status=completed&conclusion=success")
          
          last_run_status=$(echo "$response" | jq -r '.workflow_runs[0].conclusion')
          last_run_id=$(echo "$response" | jq -r '.workflow_runs[0].id')

          echo "::debug::Last run status: $last_run_status"
          
          tag=$(echo "$response" | jq -r '.workflow_runs[0].head_branch')

          semver_regex='^[0-9]+\.[0-9]+\.[0-9]+$'


          if [[ "$tag" =~ $semver_regex ]]; then
            echo "::debug::tag : $tag"
            echo "Workflow completed successfully. Triggering dependent workflow."
            echo "release-tag=$tag" >> $GITHUB_OUTPUT
          else
            echo "No successful workflow detected. Exiting."
            exit 1
          fi
  
  build_gtnh_server_stable:
    needs: check_status
    if: ${{ needs.check_status.outputs.release-tag }} != ''
    runs-on: [linux,x64]
    steps:
      - name: "Putshing Version to ENV"
        env: 
          pack_version: ${{needs.check_status.outputs.release-tag}}
        run: |
          echo "VERSION=$pack_version" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: downcase REPO
        run: |
          echo "REPO=${GITHUB_REPOSITORY}" >>${GITHUB_ENV}
      - uses: docker/metadata-action@v3
        id: metadata
        with:
          images: ghcr.io/${{ env.REPO }}
          tags: |
            "${{ env.VERSION }}"
            "stable-${{ env.VERSION }}"
            stable-latest
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${ github.actor }}
          password: ${{ secrets.PAT_TOKEN}}
      - uses: docker/build-push-action@v6
        with:
          push: true
          context: "./src/docker/version/"
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: |
            VERSION="${{ env.VERSION }}"
            BETA="false"
            

